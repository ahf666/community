{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      name: '',\n      phone: '',\n      sex: '',\n      password: '',\n      sexNum: 0,\n      dialogVisible: false,\n      dialogVisible2: false,\n      opSex2: [{\n        sex: 0,\n        label: '女'\n      }, {\n        sex: 1,\n        label: '男'\n      }],\n      house: {\n        id: 0,\n        building: 0,\n        cell: 0,\n        floor: 0,\n        doorplate: ''\n      }\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.username = this.$store.state.user.username;\n      this.name = this.$store.state.user.name;\n      this.phone = this.$store.state.user.phone;\n      this.sex = this.$store.state.user.sex == 1 ? '男' : '女';\n      this.sexNum = this.$store.state.user.sex;\n      let id = this.$store.state.user.id;\n      axios({\n        url: `/api/user/property/house/${id}`,\n        method: 'get',\n        headers: {\n          token: this.$store.state.user.token\n        }\n      }).then(res => {\n        // 成功回调函数\n        if (res.data.code == 1) {\n          // 成功\n          this.house = res.data.data;\n          this.$store.dispatch('asyncSetHouse', this.house); // vuex更新\n        } else {\n          this.$message(res.data.msg);\n        }\n      });\n    },\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    isEmptyStr(s) {\n      if (s == null || s === '') {\n        return true;\n      }\n      return false;\n    },\n    updateMsg() {\n      if (this.isEmptyStr(this.name)) {\n        this.$message(\"姓名不能为空\");\n        return;\n      }\n      if (this.isEmptyStr(this.username)) {\n        this.$message(\"用户名不能为空\");\n        return;\n      }\n      var userUpdateDTO2 = {\n        id: this.$store.state.user.id,\n        name: this.name,\n        username: this.username,\n        sex: this.sexNum\n      };\n      axios({\n        url: '/api/user/account/updateMsg',\n        method: 'post',\n        data: userUpdateDTO2,\n        headers: {\n          token: this.$store.state.user.token\n        }\n      }).then(res => {\n        // 成功回调函数\n        if (res.data.code == 1) {\n          // 成功\n          let newData = {\n            id: this.$store.state.user.id,\n            name: this.name,\n            username: this.username,\n            sex: this.sexNum,\n            phone: this.phone,\n            token: this.$store.state.user.token\n          };\n          this.$message(\"修改成功\");\n          this.$store.dispatch('userLogin', newData); // vuex更新\n          this.dialogVisible = false;\n          this.load();\n        } else {\n          this.$message(res.data.msg);\n        }\n      });\n    },\n    updatePassword() {\n      if (this.isEmptyStr(this.password)) {\n        this.$message(\"密码不能为空\");\n        return;\n      }\n      var userUpdateDTO = {\n        id: this.$store.state.user.id,\n        password: this.password\n      };\n      axios({\n        url: '/api/user/account/update',\n        method: 'post',\n        data: userUpdateDTO,\n        headers: {\n          token: this.$store.state.user.token\n        }\n      }).then(res => {\n        // 成功回调函数\n        if (res.data.code == 1) {\n          // 成功\n          this.$message(\"修改成功\");\n          this.dialogVisible2 = false;\n        } else {\n          this.$message(res.data.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","name","phone","sex","password","sexNum","dialogVisible","dialogVisible2","opSex2","label","house","id","building","cell","floor","doorplate","mounted","load","methods","$store","state","user","url","method","headers","token","then","res","code","dispatch","$message","msg","handleClose","done","$confirm","_","catch","isEmptyStr","s","updateMsg","userUpdateDTO2","newData","updatePassword","userUpdateDTO"],"sources":["src/views/user/account/account.vue"],"sourcesContent":["<template>\r\n\r\n    \r\n\r\n    <div>\r\n\r\n\r\n        <el-dialog title=\"修改信息\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\"> \r\n\r\n            <el-form :label-position=\"'left'\" label-width=\"100px\">\r\n            <el-form-item label=\"姓名\">\r\n            <el-input v-model=\"name\" placeholder=name></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户名\">\r\n            <el-input v-model=\"username\" placeholder=username></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"性别\">\r\n            <el-select v-model=\"sexNum\" placeholder=sex>\r\n                <el-option\r\n                    v-for=\"item in opSex2\"\r\n                    :key=\"item.sex\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.sex\">\r\n                </el-option>\r\n            </el-select>\r\n        </el-form-item>\r\n        </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"updateMsg\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改密码  -->\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"dialogVisible2\" width=\"30%\" :before-close=\"handleClose\"> \r\n            <el-form :label-position=\"'left'\" label-width=\"100px\">\r\n                <el-form-item label=\"新密码\">\r\n                <el-input v-model=\"password\" type=\"password\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogVisible2 = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"updatePassword\">确 定</el-button>\r\n                </span>\r\n            </el-dialog>\r\n\r\n      <el-card>\r\n        <el-descriptions class=\"margin-top\" title=\"个人信息\" :column=\"1\" border>\r\n          <template slot=\"extra\">\r\n            <el-button  class=\"bt\" type=\"primary\" size=\"small\" @click=\"dialogVisible = true\">修改信息</el-button>\r\n            <el-button  class=\"bt\" type=\"success\" size=\"small\" @click=\"dialogVisible2 = true\">修改密码</el-button>\r\n          </template>     \r\n          <el-descriptions-item >\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-user\"></i>\r\n              账号\r\n            </template>\r\n            {{ username }}\r\n          </el-descriptions-item>\r\n               \r\n          <el-descriptions-item >\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-s-custom\"></i>\r\n              姓名\r\n            </template>\r\n            {{ name }}\r\n          </el-descriptions-item>\r\n        \r\n          <el-descriptions-item>\r\n            <template slot=\"label\">\r\n              <i v-if=\"sexNum===1\"  class=\"el-icon-male\" ></i>\r\n              <i v-else  class=\"el-icon-female\"></i>\r\n              性别\r\n            </template>\r\n            <el-tag size=\"small\" >{{ sex }}</el-tag>\r\n          </el-descriptions-item>\r\n\r\n          <el-descriptions-item>\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-mobile-phone\"></i>\r\n              手机号码\r\n            </template>\r\n            {{ phone }}\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n\r\n        <el-descriptions  title=\"房屋信息\" :column=\"1\" border>   \r\n          <el-descriptions-item >\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-discount\"></i>\r\n              楼栋号\r\n            </template>\r\n            {{ house.building }}栋 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          </el-descriptions-item>\r\n               \r\n          <el-descriptions-item >\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-receiving\"></i>\r\n              单元号\r\n            </template>\r\n            {{ house.cell }}单元\r\n          </el-descriptions-item>\r\n\r\n          <el-descriptions-item >\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-coin\"></i>\r\n              楼层\r\n            </template>\r\n            {{ house.floor }}楼\r\n          </el-descriptions-item>\r\n\r\n          <el-descriptions-item >\r\n            <template slot=\"label\">\r\n              <i class=\"el-icon-postcard\"></i>\r\n              门牌号\r\n            </template>\r\n            {{ house.doorplate }}\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        name: '',\r\n        phone: '',\r\n        sex: '',\r\n        password: '',\r\n        sexNum: 0,\r\n        dialogVisible: false,\r\n        dialogVisible2: false,\r\n        opSex2: [{\r\n            sex: 0,\r\n            label: '女'\r\n          }, {\r\n            sex: 1,\r\n            label: '男'\r\n          }],\r\n          house:{\r\n            id: 0,\r\n            building: 0,\r\n            cell: 0,\r\n            floor: 0,\r\n            doorplate: ''\r\n          }\r\n      };\r\n    },\r\n    mounted() {\r\n      this.load();\r\n    },\r\n    methods: {\r\n      load() {\r\n        this.username = this.$store.state.user.username;\r\n        this.name = this.$store.state.user.name;\r\n        this.phone = this.$store.state.user.phone;\r\n        this.sex = this.$store.state.user.sex==1 ? '男' : '女';\r\n        this.sexNum = this.$store.state.user.sex\r\n\r\n        let id = this.$store.state.user.id;\r\n\r\n        axios({\r\n              url: `/api/user/property/house/${id}`,\r\n              method: 'get',\r\n              headers: {\r\n                token: this.$store.state.user.token\r\n              }\r\n            }).then(res => { // 成功回调函数\r\n              if(res.data.code == 1){ // 成功\r\n                this.house = res.data.data;\r\n                this.$store.dispatch('asyncSetHouse', this.house); // vuex更新\r\n              }else{\r\n                this.$message(res.data.msg)\r\n              }\r\n        }) \r\n      },\r\n      \r\n      handleClose(done) {\r\n          this.$confirm('确认关闭？')\r\n            .then(_ => {\r\n              done();\r\n            })\r\n            .catch(_ => {});\r\n       },\r\n\r\n       isEmptyStr(s) {\r\n          if (s == null || s === '') {\r\n            return true\r\n          }\r\n          return false\r\n        },\r\n\r\n       updateMsg(){\r\n        if(this.isEmptyStr(this.name)){\r\n            this.$message(\"姓名不能为空\")\r\n            return;\r\n          }\r\n          if(this.isEmptyStr(this.username)){\r\n            this.$message(\"用户名不能为空\")\r\n            return;\r\n          }\r\n          var userUpdateDTO2 = {\r\n            id : this.$store.state.user.id,\r\n            name: this.name,\r\n            username: this.username,\r\n            sex: this.sexNum\r\n          }\r\n          axios({\r\n              url: '/api/user/account/updateMsg',\r\n              method: 'post',\r\n              data: userUpdateDTO2,\r\n              headers: {\r\n                token: this.$store.state.user.token\r\n              }\r\n            }).then(res => { // 成功回调函数\r\n              if(res.data.code == 1){ // 成功\r\n                let newData = {\r\n                    id : this.$store.state.user.id,\r\n                    name : this.name,\r\n                    username: this.username,\r\n                    sex: this.sexNum,\r\n                    phone : this.phone,\r\n                    token : this.$store.state.user.token\r\n                }\r\n                this.$message(\"修改成功\");\r\n                this.$store.dispatch('userLogin', newData); // vuex更新\r\n                this.dialogVisible = false;\r\n                this.load()\r\n              }else{\r\n                this.$message(res.data.msg)\r\n              }\r\n            })\r\n       },\r\n\r\n       updatePassword(){\r\n          if(this.isEmptyStr(this.password)){\r\n            this.$message(\"密码不能为空\")\r\n            return;\r\n          }\r\n          var userUpdateDTO = {\r\n            id : this.$store.state.user.id,\r\n            password : this.password\r\n          }\r\n          axios({\r\n              url: '/api/user/account/update',\r\n              method: 'post',\r\n              data: userUpdateDTO,\r\n              headers: {\r\n                token: this.$store.state.user.token\r\n              }\r\n            }).then(res => { // 成功回调函数\r\n              if(res.data.code == 1){ // 成功\r\n                this.$message(\"修改成功\");\r\n                this.dialogVisible2 = false;\r\n              }else{\r\n                this.$message(res.data.msg)\r\n              }\r\n            })\r\n       }\r\n\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .el-descriptions{\r\n    margin-top: 30px;\r\n    margin-left: 50px;\r\n    margin-right: 50px;\r\n    padding-top: 30px;\r\n    padding-left: 50px;\r\n    padding-right: 50px;\r\n    padding-bottom: 50px;\r\n    background-color:#F0F9EB;\r\n    border-radius: 20px;\r\n    text-align: center;\r\n  }\r\n  .el-card{\r\n    height: 800px;\r\n    /* background-color:#E8EDF2; */\r\n  }\r\n  .bt{\r\n    width: 100px;\r\n    height: 35px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n  }\r\n\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}